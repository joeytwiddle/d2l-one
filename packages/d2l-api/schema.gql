scalar UserID
scalar RescueID
scalar SiteID
scalar Date

# Fixes an issue with allRescuesForMonth()
scalar String

schema {
  query: Query
  mutation: Mutation
}

type Query {
  me: User
  user(id: UserID!): User
  allUsers: [User!]
  rescues: [Rescue!]
  allRescuesForMonth(month: String!): [Rescue!]
  myRescues: [Rescue!]
  #search(term: String!): [SearchResult!]!
}

type Mutation {
  logIn(username: String!, password: String!): BooleanResponse!
  assignSelfToRescue(rescueId: RescueID!): Rescue!
}

enum Role {
  USER
  ADMIN
}

type User {
  id: UserID!
  name: String!
  telegramName: String!
  telegramUsername: String!
  email: String
  role: Role!
}

type Rescue {
  id: RescueID!
  date: Date!
  site: Site!
  rescuer: User
}

type Site {
  id: SiteID!
  name: String!
  geoLocation: String!
}

type BooleanResponse {
  success: Boolean!
  reason: String
}

query GetUser {
  me {
    id
    name
  }
}

query GetMyRescues {
  myRescues {
    id
    date
    site {
      id
      name
    }
  }
}

query GetAllRescuesForMonth($month: String!) {
  allRescuesForMonth(month: $month) {
    id
    date
    site {
      id
      name
    }
    rescuer {
      id
      name
    }
  }
}

query GetAllRescues {
  rescues {
    id
    date
    site {
      id
      name
    }
    rescuer {
      id
      name
    }
  }
}

mutation LogIn($username: String!, $password: String!) {
  logIn(username: $username, password: $password) {
    success
    reason
  }
}

mutation AssignSelfToRescue($rescueId: RescueID!) {
  assignSelfToRescue(rescueId: $rescueId) {
    id
  }
}
